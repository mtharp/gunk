package ftl

import "github.com/nareix/joy4/av"

// CombineSlices is a filter that combines packets with the same timestamp, as
// seen with video generated by low-latency profiles.
type CombineSlices struct {
	held []av.Packet
}

func (s *CombineSlices) ModifyPacket(pkt *av.Packet, streams []av.CodecData, vidx, aidx int) (drop bool, err error) {
	if int(pkt.Idx) != vidx {
		return
	}
	// the new packet will always be held back
	toHold := *pkt
	drop = true
	if len(s.held) != 0 && s.held[0].Time != pkt.Time {
		// release the previously held frame, replacing the new one being filtered with it
		*pkt = s.held[0]
		drop = false
		if len(s.held) > 1 {
			// combine multiple slices
			var total int
			for _, pkt := range s.held {
				total += len(pkt.Data)
			}
			buf := make([]byte, 0, total)
			for _, pkt := range s.held {
				buf = append(buf, pkt.Data...)
			}
			pkt.Data = buf
		}
		s.held = s.held[:0]
	}
	s.held = append(s.held, toHold)
	return
}
